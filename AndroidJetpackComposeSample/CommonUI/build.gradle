import kotlin.collections.*

plugins {
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-kapt")
}

android {
    compileSdk = BuildConfig.compileSdk
    defaultConfig {
        minSdk = BuildConfig.minSdkVersion
        targetSdk = BuildConfig.targetSdkVersion
        testInstrumentationRunner = BuildConfig.testInstrumentationRunner

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    implementation(AndroidX.appcompat)
    implementation(AndroidX.constraintlayout)
    implementation(AndroidX.cardview)
    implementation(AndroidX.recyclerView)
    implementation(AndroidX.coreKtx)
    implementation(AndroidX.activityKtx)
    implementation(AndroidX.fragmentKtx)
    //materialåŒ…
    implementation(Google.material)

    testImplementation(TestLib.junit)
    androidTestImplementation(TestLib.androidJunit)
    androidTestImplementation(TestLib.espresso)

    //JetPack navigation
    implementation(NavigationLib.fragmentKtx)
    implementation(NavigationLib.uiKtx)
    implementation(NavigationLib.dynamic)

    //JetPack lifecycle
    implementation(Lifecycle.liveDataKtx)
    implementation(Lifecycle.viewModelKtx)
    implementation(Lifecycle.viewModelSavedState)
    implementation(Lifecycle.commonJava8)
    implementation(Lifecycle.service)
    implementation(Lifecycle.runtimeKtx)

    //Hilt
    println(Hilt.common)
    implementation(Hilt.common)
    kapt(Hilt.compiler)

    //JetPack Room
    implementation(Room.runtime)
    kapt(Room.compiler)
    implementation(Room.ktx)
    implementation(Room.rxjava3)
    implementation(Room.guava)

    //viewPager
    implementation(ViewPager.viewpager2)
    implementation(ViewPager.viewpager)

    //okhttp
    implementation(OkHttp.okhttp)
    implementation(OkHttp.urlConnection)
    implementation(OkHttp.loggingInterceptor)

    //glide
    implementation(Glide.glide)
    implementation(Glide.compiler)
}